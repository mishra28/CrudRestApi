package com.example.demo.service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;

import com.example.demo.model.Invoice;
import com.example.demo.repository.InvoiceRepo;
import com.example.demo.responseDto.InvoiceResponseDto;

@Service
public class InvoiceCrudServiceimpl implements InvoiceCrudService {

	@Autowired
	InvoiceRepo repository;

	@Override
	public ResponseEntity<Invoice> validateMobileNo(Invoice invoice) {
		String regex = "^[6-9]\\d{9}$";
		Pattern pattern = Pattern.compile(regex);
		Matcher matcher = pattern.matcher(invoice.getMobileno());
		if (matcher.matches()) {
			return new ResponseEntity<>(repository.save(invoice), HttpStatus.OK);
		} else
			return new ResponseEntity<>(HttpStatus.BAD_REQUEST);
	}

	@Override
	public void deleteFromDb(int aid) {
		Invoice invoices = repository.getOne(aid);

		repository.delete(invoices);
	}

	@Override
	public List<InvoiceResponseDto> findAllCustomer() {
		List<Invoice> invoiceList = repository.findAll();
		List<InvoiceResponseDto> invoiceListOne = new ArrayList();
		for (Invoice invoice : invoiceList) {
			InvoiceResponseDto invoiceDto = new InvoiceResponseDto();
			invoiceDto.setAname(invoice.getAname());
			invoiceDto.setMobileNo(invoice.getMobileno());

			invoiceListOne.add(invoiceDto);
		}
		return invoiceListOne;
	}

	@Override
	public ResponseEntity<Invoice> updateAll(int aid, Invoice invoice) {
		Optional<Invoice> invoices = repository.findById(aid);
		if (invoices.isPresent()) {
			return validateMobileNo(invoice);

		} else
			return new ResponseEntity<>(HttpStatus.NOT_FOUND);
	}

	@Override
	public Optional<Invoice> findById(int aid) {
		return repository.findById(aid);
	}

}
